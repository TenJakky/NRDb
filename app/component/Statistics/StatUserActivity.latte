<table class="grid table-fixed">
    <thead>
        <tr>
            <td></td>
            <th>Movie</th>
            <th>Series</th>
            <td>Season</td>
            <th>Book</th>
            <th>Music</th>
            <th>Game</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
    {foreach $activeUsers as $temp}
        {if $temp->id == $user->getId()}
        <tr class="highlight">
        {else}
        <tr>
        {/if}
            <td><a href="{plink User:view $temp->id}">{$temp->username}</a></td>
            <td>{$temp->movie}</td>
            <td>{$temp->series}</td>
            <td>{$temp->season}</td>
            <td>{$temp->book}</td>
            <td>{$temp->music}</td>
            <td>{$temp->game}</td>
            <td>{$temp->total}</td>
        </tr>
    {/foreach}
    </tbody>
</table>
<canvas id="userActivityChart"></canvas>
<script>
    $(document).ready(function()
    {
        const statData = [
            {foreach $activeUsers as $temp}
            [
                {$temp->movie},
                {$temp->series},
                {$temp->season},
                {$temp->book},
                {$temp->music},
                {$temp->game}
            ]
            {sep},{/sep}
            {/foreach}
        ];

        var canvas = document.getElementById("userActivityChart");
        var chart = new Chart(canvas, {
            type: 'radar',
            data: {
                labels: ["Movie", "Series", "Season", "Book", "Music", "Game"],
                datasets: [
                {foreach $activeUsers as $temp}
                    {
                        label: {$temp->username},
                        data: [
                            {$temp->movie / $movieMax},
                            {$temp->series / $seriesMax},
                            {$temp->season / $seasonMax},
                            {$temp->book / $bookMax},
                            {$temp->music / $musicMax},
                            {$temp->game / $gameMax}
                        ],
                        backgroundColor: chartBackgroundColors[{$iterator->counter - 1}],
                        borderColor: chartBorderColors[{$iterator->counter - 1}],
                        borderWidth: 1
                    }
                    {sep},{/sep}
                {/foreach}
                ]
            },
            options: {
                legend: {
                    display: true
                },
                scale: {
                    ticks: {
                        beginAtZero: true,
                        suggestedMax: 1
                    }
                },
                tooltips: {
                    callbacks: {
                        label: function (label, data)
                        {
                            var text = `User ${ data.datasets[label.datasetIndex].label} has rated ${ statData[label.datasetIndex][label.index]} ${ data.labels[label.index]} elements, `;
                            if (label.yLabel === 1)
                            {
                                return text + 'he is currently the best user in this category.';
                            }
                            else
                            {
                                return text + 'that is ' + label.yLabel * 100 + '% of ratings by the best user.';
                            }
                        },
                        title: function(title, data)
                        {
                            console.log(title);
                            return `${ data.labels[title[0].index]} - ${ data.datasets[title[0].datasetIndex].label}`;
                        }
                    }
                }
            }
        });
    });
</script>
